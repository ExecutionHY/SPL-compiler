program graph1;
type
	type1 = record
		num : integer;
		value : real;
	end;
	type2 = (item0, item1, item2);
var
	a : integer;
	b : real;

	c : array[1..10] of integer;
	d : type1;
	e : type2;
begin
	a := 1;
	b := 1.1;
	c[2] := 1;
	d.num := 1;
	e := item2;

	if a = d.num then write(a)
	else a := d.num
	;

	repeat
		a := a + 1;
	until a = 5;


end
.

{
const
	one = 1;
type
	type1 = integer;
	type2 = (item1, item2);
	type3 = record
		num : integer;
		value : real;
	end;
var
	a, a1, i: type1;
	b: type2;
	c: type3;
	d: array[2..10] of integer;
begin
	a := one;
	b := item2;
	d[1+2] := 1;
	a := odd(1);
	c.num := 1;
	if a = c.num then writeln(a)
	else a := c.num
	;

	a1 := 3;
	repeat
		a := a + 1;
	until a = a1;

	while a < 6 do
		a := a + 1;

	for i := 1 to 3 do
		a := a - 1;

end
.
}